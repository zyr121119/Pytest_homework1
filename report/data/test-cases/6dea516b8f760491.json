{
  "uid" : "6dea516b8f760491",
  "name" : "test_add[exceptnull]",
  "fullName" : "test_cal.TestCal#test_add",
  "historyId" : "b2dfea9e18dee378ce7c5eb2ac89a6ed",
  "time" : {
    "start" : 1609067388941,
    "stop" : 1609067388941,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "self = <test_cal.TestCal object at 0x0000010DBBD8D0D0>, a = None, b = None, expect = None\n\n    @pytest.mark.parametrize(\"a,b,expect\",readyaml(\"add\")[0],ids=readyaml(\"add\")[1])\n    def test_add(self,a,b,expect):\n        try:\n>           result = self.cal.add(a,b)\n\ntest_cal.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pythoncode.calculator.Calculator object at 0x0000010DBBCB3220>, a = None, b = None\n\n    def add(self,a,b):\n>       return a+b\nE       TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'\n\npythoncode\\calculator.py:3: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cal.TestCal object at 0x0000010DBBD8D0D0>, a = None, b = None, expect = None\n\n    @pytest.mark.parametrize(\"a,b,expect\",readyaml(\"add\")[0],ids=readyaml(\"add\")[1])\n    def test_add(self,a,b,expect):\n        try:\n            result = self.cal.add(a,b)\n            if isinstance(result,float):\n                result =round(result,2)\n            assert result==expect\n        except Exception as e:\n>           assert False\nE           assert False\n\ntest_cal.py:38: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1609067388791,
      "stop" : 1609067388791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_method",
    "time" : {
      "start" : 1609067388941,
      "stop" : 1609067388941,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1609067389621,
      "stop" : 1609067389631,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_method::0",
    "time" : {
      "start" : 1609067388991,
      "stop" : 1609067388991,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_cal"
  }, {
    "name" : "subSuite",
    "value" : "TestCal"
  }, {
    "name" : "host",
    "value" : "LAPTOP-VD3CM5VB"
  }, {
    "name" : "thread",
    "value" : "4588-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cal"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "None"
  }, {
    "name" : "b",
    "value" : "None"
  }, {
    "name" : "expect",
    "value" : "None"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6dea516b8f760491.json",
  "parameterValues" : [ "None", "None", "None" ]
}